//! This file is autogenerated by rs_generator.py.<br>Code in this file uses wynncraft item data from [wynnbuilder's github repo](https://raw.githubusercontent.com/hppeng-wynn/hppeng-wynn.github.io/dev/data/2.0.4.3/items.json)
pub (super) mod atree_data;use core::fmt;use crate::wynn_data::{WynnEnum,TryIntoWynnEnumError};use crate::enum_from_into;
#[derive(Clone,Default,PartialEq,PartialOrd,Eq,Ord,Copy,Debug)]
pub enum AtreeItems{#[default]ArrowBomb,BowProficiency,CheaperArrowBomb,HeartShatter,DoubleShots,Escape,PowerShots,ArrowStorm,CheaperEscapeI,ArrowShield,WindyFeet,AirMastery,ThunderMastery,FireMastery,WaterMastery,EarthMastery,NimbleString,ArrowRain,BryophyteRoots,FireCreep,PhantomRay,TripleShots,Frenzy,GuardianAngels,BasalticTrap,Focus,Windstorm,CheaperArrowStormI,Implosion,MoreShields,PatientHunter,GrapplingHook,MoreFocusI,StormyFeet,CallOfTheHound,Leap,Traveler,BouncingBomb,IvyrootMamba,TwainsArc,RocketJump,ScorchedEarth,MoreTraps,RefinedGunpowder,FierceStomp,CheaperArrowShieldI,BetterArrowShield,ShockingBomb,BetterLeap,HomingShots,ManaTrap,CheaperArrowStormIi,Initiator,BetterGuardianAngels,EscapeArtist,MurderFlock,Decimator,PhasingBeam,Recycling,ShrapnelBomb,CheaperEscapeIi,CheaperArrowShieldIi,StrongerHook,CoursingRestraints,ArrowHurricane,TangledTraps,BeastLore,CrepuscularRay,Minefield,AllseeingPanoptes,StrongerPatientHunter,GrapeBomb,MoreFocusIi,Elusive,GeyserStomp,SnowStorm,CheaperArrowBombIi}
impl WynnEnum for AtreeItems{const VARIENTS:&'static[Self]=&[Self::ArrowBomb,Self::BowProficiency,Self::CheaperArrowBomb,Self::HeartShatter,Self::DoubleShots,Self::Escape,Self::PowerShots,Self::ArrowStorm,Self::CheaperEscapeI,Self::ArrowShield,Self::WindyFeet,Self::AirMastery,Self::ThunderMastery,Self::FireMastery,Self::WaterMastery,Self::EarthMastery,Self::NimbleString,Self::ArrowRain,Self::BryophyteRoots,Self::FireCreep,Self::PhantomRay,Self::TripleShots,Self::Frenzy,Self::GuardianAngels,Self::BasalticTrap,Self::Focus,Self::Windstorm,Self::CheaperArrowStormI,Self::Implosion,Self::MoreShields,Self::PatientHunter,Self::GrapplingHook,Self::MoreFocusI,Self::StormyFeet,Self::CallOfTheHound,Self::Leap,Self::Traveler,Self::BouncingBomb,Self::IvyrootMamba,Self::TwainsArc,Self::RocketJump,Self::ScorchedEarth,Self::MoreTraps,Self::RefinedGunpowder,Self::FierceStomp,Self::CheaperArrowShieldI,Self::BetterArrowShield,Self::ShockingBomb,Self::BetterLeap,Self::HomingShots,Self::ManaTrap,Self::CheaperArrowStormIi,Self::Initiator,Self::BetterGuardianAngels,Self::EscapeArtist,Self::MurderFlock,Self::Decimator,Self::PhasingBeam,Self::Recycling,Self::ShrapnelBomb,Self::CheaperEscapeIi,Self::CheaperArrowShieldIi,Self::StrongerHook,Self::CoursingRestraints,Self::ArrowHurricane,Self::TangledTraps,Self::BeastLore,Self::CrepuscularRay,Self::Minefield,Self::AllseeingPanoptes,Self::StrongerPatientHunter,Self::GrapeBomb,Self::MoreFocusIi,Self::Elusive,Self::GeyserStomp,Self::SnowStorm,Self::CheaperArrowBombIi];}impl std::convert::TryFrom<u8> for AtreeItems{type Error=TryIntoWynnEnumError<u8,Self>;fn try_from(n: u8) -> Result<Self,Self::Error> {match n{0 => Ok(AtreeItems::ArrowBomb), 1 => Ok(AtreeItems::BowProficiency), 2 => Ok(AtreeItems::CheaperArrowBomb), 3 => Ok(AtreeItems::HeartShatter), 4 => Ok(AtreeItems::DoubleShots), 5 => Ok(AtreeItems::Escape), 6 => Ok(AtreeItems::PowerShots), 7 => Ok(AtreeItems::ArrowStorm), 8 => Ok(AtreeItems::CheaperEscapeI), 9 => Ok(AtreeItems::ArrowShield), 10 => Ok(AtreeItems::WindyFeet), 11 => Ok(AtreeItems::AirMastery), 12 => Ok(AtreeItems::ThunderMastery), 13 => Ok(AtreeItems::FireMastery), 14 => Ok(AtreeItems::WaterMastery), 15 => Ok(AtreeItems::EarthMastery), 16 => Ok(AtreeItems::NimbleString), 17 => Ok(AtreeItems::ArrowRain), 18 => Ok(AtreeItems::BryophyteRoots), 19 => Ok(AtreeItems::FireCreep), 20 => Ok(AtreeItems::PhantomRay), 21 => Ok(AtreeItems::TripleShots), 22 => Ok(AtreeItems::Frenzy), 23 => Ok(AtreeItems::GuardianAngels), 24 => Ok(AtreeItems::BasalticTrap), 25 => Ok(AtreeItems::Focus), 26 => Ok(AtreeItems::Windstorm), 27 => Ok(AtreeItems::CheaperArrowStormI), 28 => Ok(AtreeItems::Implosion), 29 => Ok(AtreeItems::MoreShields), 30 => Ok(AtreeItems::PatientHunter), 31 => Ok(AtreeItems::GrapplingHook), 32 => Ok(AtreeItems::MoreFocusI), 33 => Ok(AtreeItems::StormyFeet), 34 => Ok(AtreeItems::CallOfTheHound), 35 => Ok(AtreeItems::Leap), 36 => Ok(AtreeItems::Traveler), 37 => Ok(AtreeItems::BouncingBomb), 38 => Ok(AtreeItems::IvyrootMamba), 39 => Ok(AtreeItems::TwainsArc), 40 => Ok(AtreeItems::RocketJump), 41 => Ok(AtreeItems::ScorchedEarth), 42 => Ok(AtreeItems::MoreTraps), 43 => Ok(AtreeItems::RefinedGunpowder), 44 => Ok(AtreeItems::FierceStomp), 45 => Ok(AtreeItems::CheaperArrowShieldI), 46 => Ok(AtreeItems::BetterArrowShield), 47 => Ok(AtreeItems::ShockingBomb), 48 => Ok(AtreeItems::BetterLeap), 49 => Ok(AtreeItems::HomingShots), 50 => Ok(AtreeItems::ManaTrap), 51 => Ok(AtreeItems::CheaperArrowStormIi), 52 => Ok(AtreeItems::Initiator), 53 => Ok(AtreeItems::BetterGuardianAngels), 54 => Ok(AtreeItems::EscapeArtist), 55 => Ok(AtreeItems::MurderFlock), 56 => Ok(AtreeItems::Decimator), 57 => Ok(AtreeItems::PhasingBeam), 58 => Ok(AtreeItems::Recycling), 59 => Ok(AtreeItems::ShrapnelBomb), 60 => Ok(AtreeItems::CheaperEscapeIi), 61 => Ok(AtreeItems::CheaperArrowShieldIi), 62 => Ok(AtreeItems::StrongerHook), 63 => Ok(AtreeItems::CoursingRestraints), 64 => Ok(AtreeItems::ArrowHurricane), 65 => Ok(AtreeItems::TangledTraps), 66 => Ok(AtreeItems::BeastLore), 67 => Ok(AtreeItems::CrepuscularRay), 68 => Ok(AtreeItems::Minefield), 69 => Ok(AtreeItems::AllseeingPanoptes), 70 => Ok(AtreeItems::StrongerPatientHunter), 71 => Ok(AtreeItems::GrapeBomb), 72 => Ok(AtreeItems::MoreFocusIi), 73 => Ok(AtreeItems::Elusive), 74 => Ok(AtreeItems::GeyserStomp), 75 => Ok(AtreeItems::SnowStorm), 76 => Ok(AtreeItems::CheaperArrowBombIi), _ => Err(TryIntoWynnEnumError{from: n, to: Self::default()})}}}
impl fmt::Display for AtreeItems{fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {write!(f,"{}",match self{AtreeItems::ArrowBomb => "ArrowBomb", AtreeItems::BowProficiency => "BowProficiency", AtreeItems::CheaperArrowBomb => "CheaperArrowBomb", AtreeItems::HeartShatter => "HeartShatter", AtreeItems::DoubleShots => "DoubleShots", AtreeItems::Escape => "Escape", AtreeItems::PowerShots => "PowerShots", AtreeItems::ArrowStorm => "ArrowStorm", AtreeItems::CheaperEscapeI => "CheaperEscapeI", AtreeItems::ArrowShield => "ArrowShield", AtreeItems::WindyFeet => "WindyFeet", AtreeItems::AirMastery => "AirMastery", AtreeItems::ThunderMastery => "ThunderMastery", AtreeItems::FireMastery => "FireMastery", AtreeItems::WaterMastery => "WaterMastery", AtreeItems::EarthMastery => "EarthMastery", AtreeItems::NimbleString => "NimbleString", AtreeItems::ArrowRain => "ArrowRain", AtreeItems::BryophyteRoots => "BryophyteRoots", AtreeItems::FireCreep => "FireCreep", AtreeItems::PhantomRay => "PhantomRay", AtreeItems::TripleShots => "TripleShots", AtreeItems::Frenzy => "Frenzy", AtreeItems::GuardianAngels => "GuardianAngels", AtreeItems::BasalticTrap => "BasalticTrap", AtreeItems::Focus => "Focus", AtreeItems::Windstorm => "Windstorm", AtreeItems::CheaperArrowStormI => "CheaperArrowStormI", AtreeItems::Implosion => "Implosion", AtreeItems::MoreShields => "MoreShields", AtreeItems::PatientHunter => "PatientHunter", AtreeItems::GrapplingHook => "GrapplingHook", AtreeItems::MoreFocusI => "MoreFocusI", AtreeItems::StormyFeet => "StormyFeet", AtreeItems::CallOfTheHound => "CallOfTheHound", AtreeItems::Leap => "Leap", AtreeItems::Traveler => "Traveler", AtreeItems::BouncingBomb => "BouncingBomb", AtreeItems::IvyrootMamba => "IvyrootMamba", AtreeItems::TwainsArc => "TwainsArc", AtreeItems::RocketJump => "RocketJump", AtreeItems::ScorchedEarth => "ScorchedEarth", AtreeItems::MoreTraps => "MoreTraps", AtreeItems::RefinedGunpowder => "RefinedGunpowder", AtreeItems::FierceStomp => "FierceStomp", AtreeItems::CheaperArrowShieldI => "CheaperArrowShieldI", AtreeItems::BetterArrowShield => "BetterArrowShield", AtreeItems::ShockingBomb => "ShockingBomb", AtreeItems::BetterLeap => "BetterLeap", AtreeItems::HomingShots => "HomingShots", AtreeItems::ManaTrap => "ManaTrap", AtreeItems::CheaperArrowStormIi => "CheaperArrowStormIi", AtreeItems::Initiator => "Initiator", AtreeItems::BetterGuardianAngels => "BetterGuardianAngels", AtreeItems::EscapeArtist => "EscapeArtist", AtreeItems::MurderFlock => "MurderFlock", AtreeItems::Decimator => "Decimator", AtreeItems::PhasingBeam => "PhasingBeam", AtreeItems::Recycling => "Recycling", AtreeItems::ShrapnelBomb => "ShrapnelBomb", AtreeItems::CheaperEscapeIi => "CheaperEscapeIi", AtreeItems::CheaperArrowShieldIi => "CheaperArrowShieldIi", AtreeItems::StrongerHook => "StrongerHook", AtreeItems::CoursingRestraints => "CoursingRestraints", AtreeItems::ArrowHurricane => "ArrowHurricane", AtreeItems::TangledTraps => "TangledTraps", AtreeItems::BeastLore => "BeastLore", AtreeItems::CrepuscularRay => "CrepuscularRay", AtreeItems::Minefield => "Minefield", AtreeItems::AllseeingPanoptes => "AllseeingPanoptes", AtreeItems::StrongerPatientHunter => "StrongerPatientHunter", AtreeItems::GrapeBomb => "GrapeBomb", AtreeItems::MoreFocusIi => "MoreFocusIi", AtreeItems::Elusive => "Elusive", AtreeItems::GeyserStomp => "GeyserStomp", AtreeItems::SnowStorm => "SnowStorm", AtreeItems::CheaperArrowBombIi => "CheaperArrowBombIi", })}}enum_from_into!(AtreeItems, u8,u32,u64,i32,i64,usize);
#[derive(Clone,Default,PartialEq,PartialOrd,Eq,Ord,Copy,Debug)]
pub enum Prop{#[default]Aoe,Range,Charges,Duration,Knockback,Shots,Traps,Max,Cooldown,FocusReq,Gravity,ManaRegen,ExplosionMana,AttackSpeed,Slowness}
impl WynnEnum for Prop{const VARIENTS:&'static[Self]=&[Self::Aoe,Self::Range,Self::Charges,Self::Duration,Self::Knockback,Self::Shots,Self::Traps,Self::Max,Self::Cooldown,Self::FocusReq,Self::Gravity,Self::ManaRegen,Self::ExplosionMana,Self::AttackSpeed,Self::Slowness];}impl std::convert::TryFrom<u8> for Prop{type Error=TryIntoWynnEnumError<u8,Self>;fn try_from(n: u8) -> Result<Self,Self::Error> {match n{0 => Ok(Prop::Aoe), 1 => Ok(Prop::Range), 2 => Ok(Prop::Charges), 3 => Ok(Prop::Duration), 4 => Ok(Prop::Knockback), 5 => Ok(Prop::Shots), 6 => Ok(Prop::Traps), 7 => Ok(Prop::Max), 8 => Ok(Prop::Cooldown), 9 => Ok(Prop::FocusReq), 10 => Ok(Prop::Gravity), 11 => Ok(Prop::ManaRegen), 12 => Ok(Prop::ExplosionMana), 13 => Ok(Prop::AttackSpeed), 14 => Ok(Prop::Slowness), _ => Err(TryIntoWynnEnumError{from: n, to: Self::default()})}}}
impl fmt::Display for Prop{fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {write!(f,"{}",match self{Prop::Aoe => "Aoe", Prop::Range => "Range", Prop::Charges => "Charges", Prop::Duration => "Duration", Prop::Knockback => "Knockback", Prop::Shots => "Shots", Prop::Traps => "Traps", Prop::Max => "Max", Prop::Cooldown => "Cooldown", Prop::FocusReq => "FocusReq", Prop::Gravity => "Gravity", Prop::ManaRegen => "ManaRegen", Prop::ExplosionMana => "ExplosionMana", Prop::AttackSpeed => "AttackSpeed", Prop::Slowness => "Slowness", })}}enum_from_into!(Prop, u8,u32,u64,i32,i64,usize);
#[derive(Clone,Default,PartialEq,PartialOrd,Eq,Ord,Copy,Debug)]
pub enum Spell{#[default]Melee,ArrowBomb,Escape,ArrowStorm,ArrowShield,PhantomRay,GuardianAngels,BasalticTrap,CallOfTheHound,IvyrootMamba,TwainsArc,MurderFlock,CrepuscularRay}
impl WynnEnum for Spell{const VARIENTS:&'static[Self]=&[Self::Melee,Self::ArrowBomb,Self::Escape,Self::ArrowStorm,Self::ArrowShield,Self::PhantomRay,Self::GuardianAngels,Self::BasalticTrap,Self::CallOfTheHound,Self::IvyrootMamba,Self::TwainsArc,Self::MurderFlock,Self::CrepuscularRay];}impl std::convert::TryFrom<u8> for Spell{type Error=TryIntoWynnEnumError<u8,Self>;fn try_from(n: u8) -> Result<Self,Self::Error> {match n{0 => Ok(Spell::Melee), 1 => Ok(Spell::ArrowBomb), 2 => Ok(Spell::Escape), 3 => Ok(Spell::ArrowStorm), 4 => Ok(Spell::ArrowShield), 5 => Ok(Spell::PhantomRay), 6 => Ok(Spell::GuardianAngels), 7 => Ok(Spell::BasalticTrap), 8 => Ok(Spell::CallOfTheHound), 9 => Ok(Spell::IvyrootMamba), 10 => Ok(Spell::TwainsArc), 11 => Ok(Spell::MurderFlock), 12 => Ok(Spell::CrepuscularRay), _ => Err(TryIntoWynnEnumError{from: n, to: Self::default()})}}}
impl fmt::Display for Spell{fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {write!(f,"{}",match self{Spell::Melee => "Melee", Spell::ArrowBomb => "ArrowBomb", Spell::Escape => "Escape", Spell::ArrowStorm => "ArrowStorm", Spell::ArrowShield => "ArrowShield", Spell::PhantomRay => "PhantomRay", Spell::GuardianAngels => "GuardianAngels", Spell::BasalticTrap => "BasalticTrap", Spell::CallOfTheHound => "CallOfTheHound", Spell::IvyrootMamba => "IvyrootMamba", Spell::TwainsArc => "TwainsArc", Spell::MurderFlock => "MurderFlock", Spell::CrepuscularRay => "CrepuscularRay", })}}enum_from_into!(Spell, u8,u32,u64,i32,i64,usize);
#[derive(Clone,Default,PartialEq,PartialOrd,Eq,Ord,Copy,Debug)]
pub enum SpellPart{#[default]None,Total,Dps,TotalDps,ArrowBomb,SingleArrow,SingleStream,ShieldDamage,SingleShot,SingleBow,SingleVolley,TrapDamage,SingleHit,PerSnakeDps,CrowDps,MaxDamage,HeartShatter,ArrowRain,BryophyteRoots,TotalRootsDamage,FireCreep,TotalBurnDamage,FierceStomp,ArrowShield,EscapeArtistArrow,ShrapnelBomblet,LineDamageTick,GrapeBomb,GeyserStomp}
impl WynnEnum for SpellPart{const VARIENTS:&'static[Self]=&[Self::None,Self::Total,Self::Dps,Self::TotalDps,Self::ArrowBomb,Self::SingleArrow,Self::SingleStream,Self::ShieldDamage,Self::SingleShot,Self::SingleBow,Self::SingleVolley,Self::TrapDamage,Self::SingleHit,Self::PerSnakeDps,Self::CrowDps,Self::MaxDamage,Self::HeartShatter,Self::ArrowRain,Self::BryophyteRoots,Self::TotalRootsDamage,Self::FireCreep,Self::TotalBurnDamage,Self::FierceStomp,Self::ArrowShield,Self::EscapeArtistArrow,Self::ShrapnelBomblet,Self::LineDamageTick,Self::GrapeBomb,Self::GeyserStomp];}impl std::convert::TryFrom<u8> for SpellPart{type Error=TryIntoWynnEnumError<u8,Self>;fn try_from(n: u8) -> Result<Self,Self::Error> {match n{0 => Ok(SpellPart::None), 1 => Ok(SpellPart::Total), 2 => Ok(SpellPart::Dps), 3 => Ok(SpellPart::TotalDps), 4 => Ok(SpellPart::ArrowBomb), 5 => Ok(SpellPart::SingleArrow), 6 => Ok(SpellPart::SingleStream), 7 => Ok(SpellPart::ShieldDamage), 8 => Ok(SpellPart::SingleShot), 9 => Ok(SpellPart::SingleBow), 10 => Ok(SpellPart::SingleVolley), 11 => Ok(SpellPart::TrapDamage), 12 => Ok(SpellPart::SingleHit), 13 => Ok(SpellPart::PerSnakeDps), 14 => Ok(SpellPart::CrowDps), 15 => Ok(SpellPart::MaxDamage), 16 => Ok(SpellPart::HeartShatter), 17 => Ok(SpellPart::ArrowRain), 18 => Ok(SpellPart::BryophyteRoots), 19 => Ok(SpellPart::TotalRootsDamage), 20 => Ok(SpellPart::FireCreep), 21 => Ok(SpellPart::TotalBurnDamage), 22 => Ok(SpellPart::FierceStomp), 23 => Ok(SpellPart::ArrowShield), 24 => Ok(SpellPart::EscapeArtistArrow), 25 => Ok(SpellPart::ShrapnelBomblet), 26 => Ok(SpellPart::LineDamageTick), 27 => Ok(SpellPart::GrapeBomb), 28 => Ok(SpellPart::GeyserStomp), _ => Err(TryIntoWynnEnumError{from: n, to: Self::default()})}}}
impl fmt::Display for SpellPart{fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {write!(f,"{}",match self{SpellPart::None => "None", SpellPart::Total => "Total", SpellPart::Dps => "Dps", SpellPart::TotalDps => "TotalDps", SpellPart::ArrowBomb => "ArrowBomb", SpellPart::SingleArrow => "SingleArrow", SpellPart::SingleStream => "SingleStream", SpellPart::ShieldDamage => "ShieldDamage", SpellPart::SingleShot => "SingleShot", SpellPart::SingleBow => "SingleBow", SpellPart::SingleVolley => "SingleVolley", SpellPart::TrapDamage => "TrapDamage", SpellPart::SingleHit => "SingleHit", SpellPart::PerSnakeDps => "PerSnakeDps", SpellPart::CrowDps => "CrowDps", SpellPart::MaxDamage => "MaxDamage", SpellPart::HeartShatter => "HeartShatter", SpellPart::ArrowRain => "ArrowRain", SpellPart::BryophyteRoots => "BryophyteRoots", SpellPart::TotalRootsDamage => "TotalRootsDamage", SpellPart::FireCreep => "FireCreep", SpellPart::TotalBurnDamage => "TotalBurnDamage", SpellPart::FierceStomp => "FierceStomp", SpellPart::ArrowShield => "ArrowShield", SpellPart::EscapeArtistArrow => "EscapeArtistArrow", SpellPart::ShrapnelBomblet => "ShrapnelBomblet", SpellPart::LineDamageTick => "LineDamageTick", SpellPart::GrapeBomb => "GrapeBomb", SpellPart::GeyserStomp => "GeyserStomp", })}}enum_from_into!(SpellPart, u8,u32,u64,i32,i64,usize);