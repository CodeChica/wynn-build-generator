//! This file is autogenerated by rs_generator.py.<br>Code in this file uses wynncraft item data from [wynnbuilder's github repo](https://raw.githubusercontent.com/hppeng-wynn/hppeng-wynn.github.io/dev/data/2.0.4.3/items.json)
pub (super) mod atree_data;use core::fmt;use crate::wynn_data::{WynnEnum,TryIntoWynnEnumError};use crate::enum_from_into;
#[derive(Clone,Default,PartialEq,PartialOrd,Eq,Ord,Copy,Debug)]
pub enum AtreeItems{#[default]Totem,RelikProficiency1,CheaperTotemI,TotemicSmash,DistantGrasp,Haul,HandOfTheShaman,Uproot,CheaperHaulI,Aura,TotemShove,EarthMastery,AirMastery,WaterMastery,ThunderMastery,FireMastery,NaturesJolt,Overseer,RainDance,ShockingAura,FlamingTongue,PuppetMaster,MaskOfTheLunatic,SacrificialShrine,Stagnation,CheaperAuraI,CheaperUprootI,Rebound,MorePuppetsI,HauntingMemory,BetterTotem,BloodConnection,ExplodingPuppets,HymnOfHate,LargerBloodPool,Bullwhip,MorePuppetsIi,MaskOfTheFanatic,LashingLance,VengefulSpirit,Masquerade,DoubleTotem,CheaperTotemIi,StormDance,Regeneration,CheaperHaulIi,CheaperAuraIi,StrongerTotem,TwistedTether,TotemicShatter,Depersonalization,CrimsonEffigy,MaskOfTheHeretic,FluidHealing,BloodierI,MaddeningRoots,ChantOfTheHeretic,DeeperWounds,BloodRite,SanguineStrike,FriendlyFire,ChantOfTheFanatic,StrongerTether,TripleTotem,InvigoratingWave,SeekingTotem,FrogDance,ChantOfTheLunatic,BloodierIi,Shepherd,Commander,SoaringWingbeats,HummingbirdsSong,Awakened,BloodSorrow,CheaperUprootIi}
impl WynnEnum for AtreeItems{const VARIENTS:&'static[Self]=&[Self::Totem,Self::RelikProficiency1,Self::CheaperTotemI,Self::TotemicSmash,Self::DistantGrasp,Self::Haul,Self::HandOfTheShaman,Self::Uproot,Self::CheaperHaulI,Self::Aura,Self::TotemShove,Self::EarthMastery,Self::AirMastery,Self::WaterMastery,Self::ThunderMastery,Self::FireMastery,Self::NaturesJolt,Self::Overseer,Self::RainDance,Self::ShockingAura,Self::FlamingTongue,Self::PuppetMaster,Self::MaskOfTheLunatic,Self::SacrificialShrine,Self::Stagnation,Self::CheaperAuraI,Self::CheaperUprootI,Self::Rebound,Self::MorePuppetsI,Self::HauntingMemory,Self::BetterTotem,Self::BloodConnection,Self::ExplodingPuppets,Self::HymnOfHate,Self::LargerBloodPool,Self::Bullwhip,Self::MorePuppetsIi,Self::MaskOfTheFanatic,Self::LashingLance,Self::VengefulSpirit,Self::Masquerade,Self::DoubleTotem,Self::CheaperTotemIi,Self::StormDance,Self::Regeneration,Self::CheaperHaulIi,Self::CheaperAuraIi,Self::StrongerTotem,Self::TwistedTether,Self::TotemicShatter,Self::Depersonalization,Self::CrimsonEffigy,Self::MaskOfTheHeretic,Self::FluidHealing,Self::BloodierI,Self::MaddeningRoots,Self::ChantOfTheHeretic,Self::DeeperWounds,Self::BloodRite,Self::SanguineStrike,Self::FriendlyFire,Self::ChantOfTheFanatic,Self::StrongerTether,Self::TripleTotem,Self::InvigoratingWave,Self::SeekingTotem,Self::FrogDance,Self::ChantOfTheLunatic,Self::BloodierIi,Self::Shepherd,Self::Commander,Self::SoaringWingbeats,Self::HummingbirdsSong,Self::Awakened,Self::BloodSorrow,Self::CheaperUprootIi];const ENUM_TYPE_ID:u8=34;}impl std::convert::TryFrom<u8> for AtreeItems{type Error=TryIntoWynnEnumError<u8,Self>;fn try_from(n: u8) -> Result<Self,Self::Error> {match n{0 => Ok(AtreeItems::Totem), 1 => Ok(AtreeItems::RelikProficiency1), 2 => Ok(AtreeItems::CheaperTotemI), 3 => Ok(AtreeItems::TotemicSmash), 4 => Ok(AtreeItems::DistantGrasp), 5 => Ok(AtreeItems::Haul), 6 => Ok(AtreeItems::HandOfTheShaman), 7 => Ok(AtreeItems::Uproot), 8 => Ok(AtreeItems::CheaperHaulI), 9 => Ok(AtreeItems::Aura), 10 => Ok(AtreeItems::TotemShove), 11 => Ok(AtreeItems::EarthMastery), 12 => Ok(AtreeItems::AirMastery), 13 => Ok(AtreeItems::WaterMastery), 14 => Ok(AtreeItems::ThunderMastery), 15 => Ok(AtreeItems::FireMastery), 16 => Ok(AtreeItems::NaturesJolt), 17 => Ok(AtreeItems::Overseer), 18 => Ok(AtreeItems::RainDance), 19 => Ok(AtreeItems::ShockingAura), 20 => Ok(AtreeItems::FlamingTongue), 21 => Ok(AtreeItems::PuppetMaster), 22 => Ok(AtreeItems::MaskOfTheLunatic), 23 => Ok(AtreeItems::SacrificialShrine), 24 => Ok(AtreeItems::Stagnation), 25 => Ok(AtreeItems::CheaperAuraI), 26 => Ok(AtreeItems::CheaperUprootI), 27 => Ok(AtreeItems::Rebound), 28 => Ok(AtreeItems::MorePuppetsI), 29 => Ok(AtreeItems::HauntingMemory), 30 => Ok(AtreeItems::BetterTotem), 31 => Ok(AtreeItems::BloodConnection), 32 => Ok(AtreeItems::ExplodingPuppets), 33 => Ok(AtreeItems::HymnOfHate), 34 => Ok(AtreeItems::LargerBloodPool), 35 => Ok(AtreeItems::Bullwhip), 36 => Ok(AtreeItems::MorePuppetsIi), 37 => Ok(AtreeItems::MaskOfTheFanatic), 38 => Ok(AtreeItems::LashingLance), 39 => Ok(AtreeItems::VengefulSpirit), 40 => Ok(AtreeItems::Masquerade), 41 => Ok(AtreeItems::DoubleTotem), 42 => Ok(AtreeItems::CheaperTotemIi), 43 => Ok(AtreeItems::StormDance), 44 => Ok(AtreeItems::Regeneration), 45 => Ok(AtreeItems::CheaperHaulIi), 46 => Ok(AtreeItems::CheaperAuraIi), 47 => Ok(AtreeItems::StrongerTotem), 48 => Ok(AtreeItems::TwistedTether), 49 => Ok(AtreeItems::TotemicShatter), 50 => Ok(AtreeItems::Depersonalization), 51 => Ok(AtreeItems::CrimsonEffigy), 52 => Ok(AtreeItems::MaskOfTheHeretic), 53 => Ok(AtreeItems::FluidHealing), 54 => Ok(AtreeItems::BloodierI), 55 => Ok(AtreeItems::MaddeningRoots), 56 => Ok(AtreeItems::ChantOfTheHeretic), 57 => Ok(AtreeItems::DeeperWounds), 58 => Ok(AtreeItems::BloodRite), 59 => Ok(AtreeItems::SanguineStrike), 60 => Ok(AtreeItems::FriendlyFire), 61 => Ok(AtreeItems::ChantOfTheFanatic), 62 => Ok(AtreeItems::StrongerTether), 63 => Ok(AtreeItems::TripleTotem), 64 => Ok(AtreeItems::InvigoratingWave), 65 => Ok(AtreeItems::SeekingTotem), 66 => Ok(AtreeItems::FrogDance), 67 => Ok(AtreeItems::ChantOfTheLunatic), 68 => Ok(AtreeItems::BloodierIi), 69 => Ok(AtreeItems::Shepherd), 70 => Ok(AtreeItems::Commander), 71 => Ok(AtreeItems::SoaringWingbeats), 72 => Ok(AtreeItems::HummingbirdsSong), 73 => Ok(AtreeItems::Awakened), 74 => Ok(AtreeItems::BloodSorrow), 75 => Ok(AtreeItems::CheaperUprootIi), _ => Err(TryIntoWynnEnumError{from: n, to: Self::default()})}}}
impl fmt::Display for AtreeItems{fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {write!(f,"{}",match self{AtreeItems::Totem => "Totem", AtreeItems::RelikProficiency1 => "Relik Proficiency 1", AtreeItems::CheaperTotemI => "Cheaper Totem I", AtreeItems::TotemicSmash => "Totemic Smash", AtreeItems::DistantGrasp => "Distant Grasp", AtreeItems::Haul => "Haul", AtreeItems::HandOfTheShaman => "Hand of the Shaman", AtreeItems::Uproot => "Uproot", AtreeItems::CheaperHaulI => "Cheaper Haul I", AtreeItems::Aura => "Aura", AtreeItems::TotemShove => "Totem Shove", AtreeItems::EarthMastery => "Earth Mastery", AtreeItems::AirMastery => "Air Mastery", AtreeItems::WaterMastery => "Water Mastery", AtreeItems::ThunderMastery => "Thunder Mastery", AtreeItems::FireMastery => "Fire Mastery", AtreeItems::NaturesJolt => "Nature's Jolt", AtreeItems::Overseer => "Overseer", AtreeItems::RainDance => "Rain Dance", AtreeItems::ShockingAura => "Shocking Aura", AtreeItems::FlamingTongue => "Flaming Tongue", AtreeItems::PuppetMaster => "Puppet Master", AtreeItems::MaskOfTheLunatic => "Mask of the Lunatic", AtreeItems::SacrificialShrine => "Sacrificial Shrine", AtreeItems::Stagnation => "Stagnation", AtreeItems::CheaperAuraI => "Cheaper Aura I", AtreeItems::CheaperUprootI => "Cheaper Uproot I", AtreeItems::Rebound => "Rebound", AtreeItems::MorePuppetsI => "More Puppets I", AtreeItems::HauntingMemory => "Haunting Memory", AtreeItems::BetterTotem => "Better Totem", AtreeItems::BloodConnection => "Blood Connection", AtreeItems::ExplodingPuppets => "Exploding Puppets", AtreeItems::HymnOfHate => "Hymn of Hate", AtreeItems::LargerBloodPool => "Larger Blood Pool", AtreeItems::Bullwhip => "Bullwhip", AtreeItems::MorePuppetsIi => "More Puppets II", AtreeItems::MaskOfTheFanatic => "Mask of the Fanatic", AtreeItems::LashingLance => "Lashing Lance", AtreeItems::VengefulSpirit => "Vengeful Spirit", AtreeItems::Masquerade => "Masquerade", AtreeItems::DoubleTotem => "Double Totem", AtreeItems::CheaperTotemIi => "Cheaper Totem II", AtreeItems::StormDance => "Storm Dance", AtreeItems::Regeneration => "Regeneration", AtreeItems::CheaperHaulIi => "Cheaper Haul II", AtreeItems::CheaperAuraIi => "Cheaper Aura II", AtreeItems::StrongerTotem => "Stronger Totem", AtreeItems::TwistedTether => "Twisted Tether", AtreeItems::TotemicShatter => "Totemic Shatter", AtreeItems::Depersonalization => "Depersonalization", AtreeItems::CrimsonEffigy => "Crimson Effigy", AtreeItems::MaskOfTheHeretic => "Mask of the Heretic", AtreeItems::FluidHealing => "Fluid Healing", AtreeItems::BloodierI => "Bloodier I", AtreeItems::MaddeningRoots => "Maddening Roots", AtreeItems::ChantOfTheHeretic => "Chant of the Heretic", AtreeItems::DeeperWounds => "Deeper Wounds", AtreeItems::BloodRite => "Blood Rite", AtreeItems::SanguineStrike => "Sanguine Strike", AtreeItems::FriendlyFire => "Friendly Fire", AtreeItems::ChantOfTheFanatic => "Chant of the Fanatic", AtreeItems::StrongerTether => "Stronger Tether", AtreeItems::TripleTotem => "Triple Totem", AtreeItems::InvigoratingWave => "Invigorating Wave", AtreeItems::SeekingTotem => "Seeking Totem", AtreeItems::FrogDance => "Frog Dance", AtreeItems::ChantOfTheLunatic => "Chant of the Lunatic", AtreeItems::BloodierIi => "Bloodier II", AtreeItems::Shepherd => "Shepherd", AtreeItems::Commander => "Commander", AtreeItems::SoaringWingbeats => "Soaring Wingbeats", AtreeItems::HummingbirdsSong => "Hummingbirds' Song", AtreeItems::Awakened => "Awakened", AtreeItems::BloodSorrow => "Blood Sorrow", AtreeItems::CheaperUprootIi => "Cheaper Uproot II", })}}enum_from_into!(AtreeItems, u8,u32,u64,i32,i64,usize);
#[derive(Clone,Default,PartialEq,PartialOrd,Eq,Ord,Copy,Debug)]
pub enum Prop{#[default]Duration,Rate,Aoe,TotemMul,NumTotems,Range,MaxPuppets,NumPuppets,AttackFrequency,BloodPool,SwitchCount,ManaGain,Effects,Todo,Count}
impl WynnEnum for Prop{const VARIENTS:&'static[Self]=&[Self::Duration,Self::Rate,Self::Aoe,Self::TotemMul,Self::NumTotems,Self::Range,Self::MaxPuppets,Self::NumPuppets,Self::AttackFrequency,Self::BloodPool,Self::SwitchCount,Self::ManaGain,Self::Effects,Self::Todo,Self::Count];const ENUM_TYPE_ID:u8=35;}impl std::convert::TryFrom<u8> for Prop{type Error=TryIntoWynnEnumError<u8,Self>;fn try_from(n: u8) -> Result<Self,Self::Error> {match n{0 => Ok(Prop::Duration), 1 => Ok(Prop::Rate), 2 => Ok(Prop::Aoe), 3 => Ok(Prop::TotemMul), 4 => Ok(Prop::NumTotems), 5 => Ok(Prop::Range), 6 => Ok(Prop::MaxPuppets), 7 => Ok(Prop::NumPuppets), 8 => Ok(Prop::AttackFrequency), 9 => Ok(Prop::BloodPool), 10 => Ok(Prop::SwitchCount), 11 => Ok(Prop::ManaGain), 12 => Ok(Prop::Effects), 13 => Ok(Prop::Todo), 14 => Ok(Prop::Count), _ => Err(TryIntoWynnEnumError{from: n, to: Self::default()})}}}
impl fmt::Display for Prop{fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {write!(f,"{}",match self{Prop::Duration => "Duration", Prop::Rate => "Rate", Prop::Aoe => "Aoe", Prop::TotemMul => "TotemMul", Prop::NumTotems => "NumTotems", Prop::Range => "Range", Prop::MaxPuppets => "MaxPuppets", Prop::NumPuppets => "NumPuppets", Prop::AttackFrequency => "AttackFrequency", Prop::BloodPool => "BloodPool", Prop::SwitchCount => "SwitchCount", Prop::ManaGain => "ManaGain", Prop::Effects => "Effects", Prop::Todo => "Todo", Prop::Count => "Count", })}}enum_from_into!(Prop, u8,u32,u64,i32,i64,usize);
#[derive(Clone,Default,PartialEq,PartialOrd,Eq,Ord,Copy,Debug)]
pub enum Spell{#[default]Melee,Totem,RelikMelee,Haul,Uproot,Aura,PuppetDamage,SwitchMasks,Bleeding,TwistedTether,TotemicShatter,CrimsonEffigy,HummingbirdsSong,BloodSorrow}
impl WynnEnum for Spell{const VARIENTS:&'static[Self]=&[Self::Melee,Self::Totem,Self::RelikMelee,Self::Haul,Self::Uproot,Self::Aura,Self::PuppetDamage,Self::SwitchMasks,Self::Bleeding,Self::TwistedTether,Self::TotemicShatter,Self::CrimsonEffigy,Self::HummingbirdsSong,Self::BloodSorrow];const ENUM_TYPE_ID:u8=36;}impl std::convert::TryFrom<u8> for Spell{type Error=TryIntoWynnEnumError<u8,Self>;fn try_from(n: u8) -> Result<Self,Self::Error> {match n{0 => Ok(Spell::Melee), 1 => Ok(Spell::Totem), 2 => Ok(Spell::RelikMelee), 3 => Ok(Spell::Haul), 4 => Ok(Spell::Uproot), 5 => Ok(Spell::Aura), 6 => Ok(Spell::PuppetDamage), 7 => Ok(Spell::SwitchMasks), 8 => Ok(Spell::Bleeding), 9 => Ok(Spell::TwistedTether), 10 => Ok(Spell::TotemicShatter), 11 => Ok(Spell::CrimsonEffigy), 12 => Ok(Spell::HummingbirdsSong), 13 => Ok(Spell::BloodSorrow), _ => Err(TryIntoWynnEnumError{from: n, to: Self::default()})}}}
impl fmt::Display for Spell{fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {write!(f,"{}",match self{Spell::Melee => "Melee", Spell::Totem => "Totem", Spell::RelikMelee => "RelikMelee", Spell::Haul => "Haul", Spell::Uproot => "Uproot", Spell::Aura => "Aura", Spell::PuppetDamage => "PuppetDamage", Spell::SwitchMasks => "SwitchMasks", Spell::Bleeding => "Bleeding", Spell::TwistedTether => "TwistedTether", Spell::TotemicShatter => "TotemicShatter", Spell::CrimsonEffigy => "CrimsonEffigy", Spell::HummingbirdsSong => "HummingbirdsSong", Spell::BloodSorrow => "BloodSorrow", })}}enum_from_into!(Spell, u8,u32,u64,i32,i64,usize);
#[derive(Clone,Default,PartialEq,PartialOrd,Eq,Ord,Copy,Debug)]
pub enum SpellPart{#[default]None,Total,Dps,TotalDps,TickDamage,TickDpsPerTotem,HealRatePerTotem,TickDps,HealRate,SingleBeam,SingleHit,SingleWave,FirstWave,FirstWaveHeal,PuppetHit,PuppetDps,TotalPuppetDps,BleedingTick,TetherTick,ExplosionDamage,EffigyHit,SingleEffigyDps,TotalEffigyDps,HummingbirdHit,SingleHummingbirdDps,TotalHummingbirdDps,BeamTickDamage,BeamDps,SmashDamage,ShoveDamage,NaturesJolt,RainDance,HealAmount,ReboundTotalDamage,ReboundTotalHeal,MaskThrow,PuppetExplosion,HymnOfHate,HealTick,ExplosionHeal,ChantOfTheHeretic,HopDamage}
impl WynnEnum for SpellPart{const VARIENTS:&'static[Self]=&[Self::None,Self::Total,Self::Dps,Self::TotalDps,Self::TickDamage,Self::TickDpsPerTotem,Self::HealRatePerTotem,Self::TickDps,Self::HealRate,Self::SingleBeam,Self::SingleHit,Self::SingleWave,Self::FirstWave,Self::FirstWaveHeal,Self::PuppetHit,Self::PuppetDps,Self::TotalPuppetDps,Self::BleedingTick,Self::TetherTick,Self::ExplosionDamage,Self::EffigyHit,Self::SingleEffigyDps,Self::TotalEffigyDps,Self::HummingbirdHit,Self::SingleHummingbirdDps,Self::TotalHummingbirdDps,Self::BeamTickDamage,Self::BeamDps,Self::SmashDamage,Self::ShoveDamage,Self::NaturesJolt,Self::RainDance,Self::HealAmount,Self::ReboundTotalDamage,Self::ReboundTotalHeal,Self::MaskThrow,Self::PuppetExplosion,Self::HymnOfHate,Self::HealTick,Self::ExplosionHeal,Self::ChantOfTheHeretic,Self::HopDamage];const ENUM_TYPE_ID:u8=37;}impl std::convert::TryFrom<u8> for SpellPart{type Error=TryIntoWynnEnumError<u8,Self>;fn try_from(n: u8) -> Result<Self,Self::Error> {match n{0 => Ok(SpellPart::None), 1 => Ok(SpellPart::Total), 2 => Ok(SpellPart::Dps), 3 => Ok(SpellPart::TotalDps), 4 => Ok(SpellPart::TickDamage), 5 => Ok(SpellPart::TickDpsPerTotem), 6 => Ok(SpellPart::HealRatePerTotem), 7 => Ok(SpellPart::TickDps), 8 => Ok(SpellPart::HealRate), 9 => Ok(SpellPart::SingleBeam), 10 => Ok(SpellPart::SingleHit), 11 => Ok(SpellPart::SingleWave), 12 => Ok(SpellPart::FirstWave), 13 => Ok(SpellPart::FirstWaveHeal), 14 => Ok(SpellPart::PuppetHit), 15 => Ok(SpellPart::PuppetDps), 16 => Ok(SpellPart::TotalPuppetDps), 17 => Ok(SpellPart::BleedingTick), 18 => Ok(SpellPart::TetherTick), 19 => Ok(SpellPart::ExplosionDamage), 20 => Ok(SpellPart::EffigyHit), 21 => Ok(SpellPart::SingleEffigyDps), 22 => Ok(SpellPart::TotalEffigyDps), 23 => Ok(SpellPart::HummingbirdHit), 24 => Ok(SpellPart::SingleHummingbirdDps), 25 => Ok(SpellPart::TotalHummingbirdDps), 26 => Ok(SpellPart::BeamTickDamage), 27 => Ok(SpellPart::BeamDps), 28 => Ok(SpellPart::SmashDamage), 29 => Ok(SpellPart::ShoveDamage), 30 => Ok(SpellPart::NaturesJolt), 31 => Ok(SpellPart::RainDance), 32 => Ok(SpellPart::HealAmount), 33 => Ok(SpellPart::ReboundTotalDamage), 34 => Ok(SpellPart::ReboundTotalHeal), 35 => Ok(SpellPart::MaskThrow), 36 => Ok(SpellPart::PuppetExplosion), 37 => Ok(SpellPart::HymnOfHate), 38 => Ok(SpellPart::HealTick), 39 => Ok(SpellPart::ExplosionHeal), 40 => Ok(SpellPart::ChantOfTheHeretic), 41 => Ok(SpellPart::HopDamage), _ => Err(TryIntoWynnEnumError{from: n, to: Self::default()})}}}
impl fmt::Display for SpellPart{fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {write!(f,"{}",match self{SpellPart::None => "None", SpellPart::Total => "Total", SpellPart::Dps => "Dps", SpellPart::TotalDps => "TotalDps", SpellPart::TickDamage => "TickDamage", SpellPart::TickDpsPerTotem => "TickDpsPerTotem", SpellPart::HealRatePerTotem => "HealRatePerTotem", SpellPart::TickDps => "TickDps", SpellPart::HealRate => "HealRate", SpellPart::SingleBeam => "SingleBeam", SpellPart::SingleHit => "SingleHit", SpellPart::SingleWave => "SingleWave", SpellPart::FirstWave => "FirstWave", SpellPart::FirstWaveHeal => "FirstWaveHeal", SpellPart::PuppetHit => "PuppetHit", SpellPart::PuppetDps => "PuppetDps", SpellPart::TotalPuppetDps => "TotalPuppetDps", SpellPart::BleedingTick => "BleedingTick", SpellPart::TetherTick => "TetherTick", SpellPart::ExplosionDamage => "ExplosionDamage", SpellPart::EffigyHit => "EffigyHit", SpellPart::SingleEffigyDps => "SingleEffigyDps", SpellPart::TotalEffigyDps => "TotalEffigyDps", SpellPart::HummingbirdHit => "HummingbirdHit", SpellPart::SingleHummingbirdDps => "SingleHummingbirdDps", SpellPart::TotalHummingbirdDps => "TotalHummingbirdDps", SpellPart::BeamTickDamage => "BeamTickDamage", SpellPart::BeamDps => "BeamDps", SpellPart::SmashDamage => "SmashDamage", SpellPart::ShoveDamage => "ShoveDamage", SpellPart::NaturesJolt => "NaturesJolt", SpellPart::RainDance => "RainDance", SpellPart::HealAmount => "HealAmount", SpellPart::ReboundTotalDamage => "ReboundTotalDamage", SpellPart::ReboundTotalHeal => "ReboundTotalHeal", SpellPart::MaskThrow => "MaskThrow", SpellPart::PuppetExplosion => "PuppetExplosion", SpellPart::HymnOfHate => "HymnOfHate", SpellPart::HealTick => "HealTick", SpellPart::ExplosionHeal => "ExplosionHeal", SpellPart::ChantOfTheHeretic => "ChantOfTheHeretic", SpellPart::HopDamage => "HopDamage", })}}enum_from_into!(SpellPart, u8,u32,u64,i32,i64,usize);